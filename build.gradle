// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
    }

    ext {

        compose_ui_version = '1.1.1'
        _hiltVersion = "2.42"
        _kotlinVersion = "1.7.20"

        _applicationId = "com.vrashkov.androidtutorials"
        _compileSdk= 33
        _minSdk = 26
        _targetSdk = 33
        _versionCode = 1
        _versionName = "1.0"

        _composeVersion = "1.3.2"
        _hiltWorkVersion = "1.0.0"
        _workVersion = "2.7.1"
        _coilVersion = "2.2.2"
        _accompanistVersion = "0.27.0"
        _ktxVersion = "1.9.0"
        _appCompatVersion = "1.5.1"
        _composeActivityVersion = "1.6.1"
        _composeNavigationVersion = "2.6.0-alpha04"
        _composeHiltNavigationVersion = "1.0.0"
        _googleMaterialVersion = "1.7.0"
        _kotlinSerializationVersion = "1.4.1"
        _ktorVersion = "2.1.3"
        _junitVersion = "4.13.2"
        _lifecycleVmKtxVersion = "2.5.1"
        _roomVersion = "2.4.3"
        _apolloVersion = "3.7.1"
        _jetbrainsAnnotationVersion = "23.0.0"
        _retrofitVersion = "2.9.0"
        _httploggingVersion = "4.10.0"//"3.12.0"
        _moshiVersion = "1.12.0"
        _composeConstraintLayout = "1.0.1"
        _timberVersion = "5.0.1"
        _blessedCoroutinesVersion = "0.3.2"
        _robolectricVersion = "4.9"
        _dataStoreVersion = "1.0.0"
        _accompanistSystemUiVersion = "0.27.0"
        _androidXVersion = "1.4.0"
        _mockkVersion = "1.13.2"
        _googleTruthVersion = "1.1.3"
        _coreTestingVersion = "2.1.0"
        _coroutinesTestingVersion = "1.6.4"
        _turbineVersion = "0.12.0"
        _mockitoCoreVersion = "4.8.1"
        _mockitoKotlinVersion = "3.2.0"
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20"
        classpath "com.google.dagger:hilt-android-gradle-plugin:${_hiltVersion}"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    ext {
        _kotlinSerializationPlugin = "org.jetbrains.kotlin.plugin.serialization"

        _hiltAndroid = "com.google.dagger:hilt-android:${_hiltVersion}"
        _hiltCompiler = "com.google.dagger:hilt-compiler:${_hiltVersion}"
        _hiltAndroidTest = "com.google.dagger:hilt-android-testing:${_hiltVersion}"

        _hiltAndroidCompiler = "com.google.dagger:hilt-android-compiler:${_hiltVersion}"

        _workRuntime = "androidx.work:work-runtime:${_workVersion}"

        // Kotlin + coroutines
        _workRuntimeKtx = "androidx.work:work-runtime-ktx:${_workVersion}"

        // optional - Test helpers
        _workTesting = "androidx.work:work-testing:${_workVersion}"


        _androidXHiltWork = "androidx.hilt:hilt-work:${_hiltWorkVersion}"
        // When using Kotlin.
        _androidXHiltCompiler = "ndroidx.hilt:hilt-compiler:${_hiltWorkVersion}"
        // When using Java.
        _androidXHiltCompiler = "androidx.hilt:hilt-compiler:${_hiltWorkVersion}"

        _coil = "io.coil-kt:coil-compose:${_coilVersion}"

        _accompanistAnimations = "com.google.accompanist:accompanist-navigation-animation:${_accompanistVersion}"
        _accompanistInsets = "com.google.accompanist:accompanist-insets:${_accompanistVersion}"

        // the previous version 0.20.2 doesn't wrap height in viewpagter
        _pager = "com.google.accompanist:accompanist-pager:${_accompanistVersion}"
        _pagerIndicators = "com.google.accompanist:accompanist-pager-indicators:${_accompanistVersion}"

        _coreCtx = "androidx.core:core-ktx:${_ktxVersion}"

        _appCompat = "androidx.appcompat:appcompat:${_appCompatVersion}"

        _composeActivity = "androidx.activity:activity-compose:${_composeActivityVersion}"

        _composeUi = "androidx.compose.ui:ui"
        _composeMaterial = "androidx.compose.material:material"
        _composeTooling = "androidx.compose.ui:ui-tooling"

        _composeNavigation = "androidx.navigation:navigation-compose:${_composeNavigationVersion}"

        _composeHiltNavigation = "androidx.hilt:hilt-navigation-compose:${_composeHiltNavigationVersion}"
        _composeConstraintLayout = "androidx.constraintlayout:constraintlayout-compose:${_composeConstraintLayout}"
        _composeFoundationLayout = "androidx.compose.foundation:foundation-layout"
        _composeFoundation = "androidx.compose.foundation:foundation"

        _googleMaterial = "com.google.android.material:material:${_googleMaterialVersion}"

        _kotlinSerialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:${_kotlinSerializationVersion}"

        _ktorCore = "io.ktor:ktor-client-core:${_ktorVersion}"

        _clientSerialization = "io.ktor:ktor-client-serialization:${_ktorVersion}"

        _junit = "junit:junit:${_junitVersion}"

        _lifecycleVmKtx = "androidx.lifecycle:lifecycle-viewmodel-ktx:${_lifecycleVmKtxVersion}"
        _lifecycleVmCompose = "androidx.lifecycle:lifecycle-viewmodel-compose:${_lifecycleVmKtxVersion}"
        _liveData = "androidx.lifecycle:lifecycle-livedata-ktx:${_lifecycleVmKtxVersion}"

        _roomRuntime = "androidx.room:room-runtime:${_roomVersion}"
        _roomCompiler = "androidx.room:room-compiler:${_roomVersion}"
        _roomKtx = "androidx.room:room-ktx:${_roomVersion}"

        _jetbrainsAnnotations = "org.jetbrains:annotations:${_jetbrainsAnnotationVersion}"

        _retrofit = "com.squareup.retrofit2:retrofit:${_retrofitVersion}"
        _retrofitMoshiConverter = "com.squareup.retrofit2:converter-moshi:${_retrofitVersion}"
        _okHttpLoginInterceptor = "com.squareup.okhttp3:logging-interceptor:${_httploggingVersion}"
        _mockWebServer = "com.squareup.okhttp3:mockwebserver:${_httploggingVersion}"
        _moshi = "com.squareup.moshi:moshi:${_moshiVersion}"
        _moshiKotlin = "com.squareup.moshi:moshi-kotlin:${_moshiVersion}"
        _timber = "com.jakewharton.timber:timber:${_timberVersion}"

        _bleDevices = "com.github.weliem:blessed-android-coroutines:${_blessedCoroutinesVersion}"
        _robolectric = "org.robolectric:robolectric:${_robolectricVersion}"

        _dataStorePreferences = "androidx.datastore:datastore-preferences:${_dataStoreVersion}"
        _dataStorePreferencesCore = "androidx.datastore:datastore-preferences-core:${_dataStoreVersion}"

        _accompanistSystemUIController = "com.google.accompanist:accompanist-systemuicontroller:${_accompanistSystemUiVersion}"

        _androidXRunner = "androidx.test:runner:${_androidXVersion}"
        _androidXRules = "androidx.test:rules:${_androidXVersion}"
        _androidXCore = "androidx.test:core:${_androidXVersion}"
        _androidTestOrchestrator = "androidx.test:orchestrator:${_androidXVersion}"

        _uiTestUnit4 = "androidx.compose.ui:ui-test-junit4"
        _uiTestUnitManifest = "androidx.compose.ui:ui-test-manifest"

        // for android ui tests
        _mockkAndroid = "io.mockk:mockk-android:${_mockkVersion}"
        // for unit tests
        _mockk = "io.mockk:mockk:${_mockkVersion}"

        _googleTruth = "com.google.truth:truth:${_googleTruthVersion}"

        _coreTesting = "androidx.arch.core:core-testing:${_coreTestingVersion}"
        _coroutinesTesting = "org.jetbrains.kotlinx:kotlinx-coroutines-test:${_coroutinesTestingVersion}"

        _turbine = "app.cash.turbine:turbine:${_turbineVersion}"

        _mockitoCore = "org.mockito:mockito-core:${_mockitoCoreVersion}"
        _mockitoCoreAndroid = "org.mockito:mockito-android:${_mockitoCoreVersion}"

        _mockitoKotlin = "org.mockito.kotlin:mockito-kotlin:${_mockitoKotlinVersion}"
        _mockitoInline = "org.mockito:mockito-inline:${_mockitoCoreVersion}"
        _gson = "com.google.code.gson:gson:2.10"

        _apolloRuntime = "com.apollographql.apollo3:apollo-runtime:${_apolloVersion}"
        _apolloNormalizedCache = "com.apollographql.apollo3:apollo-normalized-cache-incubating:${_apolloVersion}"
        _apolloNormalizedCacheSql = "com.apollographql.apollo3:apollo-normalized-cache-sqlite-incubating:${_apolloVersion}"

        _apolloApi = "com.apollographql.apollo3:apollo-api:${_apolloVersion}"

    }
}
allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven {
            url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        }
    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
}
